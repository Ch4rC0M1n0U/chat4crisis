"use strict";(()=>{var e={};e.id=306,e.ids=[306],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1589:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>v,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>d});var o=r(9303),i=r(8716),n=r(670),a=r(7070),p=r(3493);let u=process.env.ADMIN_SECRET;async function d(e,{params:t}){if(u&&e.headers.get("x-admin-secret")!==u)return new a.NextResponse("Unauthorized",{status:401});let r=await e.json(),{code:s}=t,o=await p._.room.findUnique({where:{code:s}});if(!o)return new a.NextResponse("Room not found",{status:404});if(!r.title)return new a.NextResponse("Missing title",{status:400});let i=await p._.crisisEvent.create({data:{roomId:o.id,title:r.title,description:r.description||"",severity:r.severity||1}});return a.NextResponse.json({ok:!0,id:i.id})}let c=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/rooms/[code]/events/route",pathname:"/api/rooms/[code]/events",filename:"route",bundlePath:"app/api/rooms/[code]/events/route"},resolvedPagePath:"/workspaces/chat4crisis/app/api/rooms/[code]/events/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:v}=c,x="/api/rooms/[code]/events/route";function h(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:m})}},3493:(e,t,r)=>{r.d(t,{_:()=>o});let s=require("@prisma/client"),o=global.prisma??new s.PrismaClient}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(1589));module.exports=s})();